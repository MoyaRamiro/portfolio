---
import angular from "../assets/svg/angular.svg";
import astro from "../assets/svg/astro.svg";
import auth0 from "../assets/svg/auth0.svg";
import java from "../assets/svg/java.svg";
import postgresql from "../assets/svg/postgresql.svg";
import remix from "../assets/svg/remix.svg";
import spring from "../assets/svg/spring.svg";
import react from "../assets/svg/react.svg";
import typeScript from "../assets/svg/typeScript.svg";
import tailwindcss from "../assets/svg/tailwindcss.svg";
import nodejs from "../assets/svg/nodejs.svg";
import HTML5 from "../assets/svg/HTML5.svg";
import CSS3 from "../assets/svg/CSS3.svg";
import javaScript from "../assets/svg/javaScript.svg";
import git from "../assets/svg/git.svg";
import mysql from "../assets/svg/mysql.svg";
import vercel from "../assets/svg/vercel.svg";
import vite from "../assets/svg/vite.svg";
import supa from "../assets/svg/supabase.svg";
import nest from "../assets/svg/nestjs.svg";
import next from "../assets/svg/nextjs.svg";

interface Technology {
  name: string;
  image: any;
}
const technologies: Technology[] = [
  { name: "Angular", image: angular },
  { name: "Astro", image: astro },
  { name: "Auth0", image: auth0 },
  { name: "Java", image: java },
  { name: "PostgreSQL", image: postgresql },
  { name: "Remix", image: remix },
  { name: "Spring", image: spring },
  { name: "React", image: react },
  { name: "TypeScript", image: typeScript },
  { name: "TailwindCSS", image: tailwindcss },
  { name: "Node.js", image: nodejs },
  { name: "HTML", image: HTML5 },
  { name: "CSS", image: CSS3 },
  { name: "JavaScript", image: javaScript },
  { name: "Git", image: git },
  { name: "Mysql", image: mysql },
  { name: "Vercel", image: vercel },
  { name: "Vite", image: vite },
  { name: "Supabase", image: supa },
  { name: "NestJS", image: nest },
  { name: "Next.js", image: next },
];
---

<div class="relative overflow-x-hidden py-8">
  <div
    class="pointer-events-none absolute inset-y-0 left-0 z-20 w-8 bg-gradient-to-r from-[var(--background)] to-transparent md:w-32"
  >
  </div>
  <div
    class="pointer-events-none absolute inset-y-0 right-0 z-20 w-8 bg-gradient-to-l from-[var(--background)] to-transparent md:w-32"
  >
  </div>

  <div class="animate-scroll hover:animate-paused flex w-max gap-12 md:gap-20">
    {
      [...technologies, ...technologies, ...technologies].map((tech) => (
        <div class="group flex items-center gap-2 transition-all duration-300">
          <tech.image
            class="h-7 w-auto object-contain opacity-60 transition-transform group-hover:scale-110"
            width="30"
            height="30"
          />
          <span class="text-lg font-medium text-[var(--white-icon)]">
            {tech.name.charAt(0).toUpperCase() + tech.name.slice(1)}
          </span>
        </div>
      ))
    }
  </div>
</div>

<style is:global>
  @keyframes scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-50%);
    }
  }
  .animate-scroll {
    animation: scroll 60s linear infinite;
  }

  @media (min-width: 768px) {
    .animate-scroll {
      animation-duration: 50s;
    }
  }
</style>
